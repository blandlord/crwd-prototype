{
  "contractName": "CRWDToken",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x06fdde03"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x095ea7b3"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x18160ddd"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x23b872dd"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "INITIAL_SUPPLY",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x2ff2e9dc"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x313ce567"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x66188463"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x70a08231"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x95d89b41"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa9059cbb"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xd73dd623"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xdd62ed3e"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor",
      "signature": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event",
      "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event",
      "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b506a52b7d2dcc80cd2e40000006001819055336000908152602081905260409020556108ce806100416000396000f3fe6080604052600436106100b95763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100be578063095ea7b31461014857806318160ddd1461019557806323b872dd146101bc5780632ff2e9dc146101ff578063313ce56714610214578063661884631461023f57806370a082311461027857806395d89b41146102ab578063a9059cbb146102c0578063d73dd623146102f9578063dd62ed3e14610332575b600080fd5b3480156100ca57600080fd5b506100d361036d565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561010d5781810151838201526020016100f5565b50505050905090810190601f16801561013a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015457600080fd5b506101816004803603604081101561016b57600080fd5b50600160a060020a0381351690602001356103a4565b604080519115158252519081900360200190f35b3480156101a157600080fd5b506101aa61040a565b60408051918252519081900360200190f35b3480156101c857600080fd5b50610181600480360360608110156101df57600080fd5b50600160a060020a03813581169160208101359091169060400135610410565b34801561020b57600080fd5b506101aa610585565b34801561022057600080fd5b50610229610594565b6040805160ff9092168252519081900360200190f35b34801561024b57600080fd5b506101816004803603604081101561026257600080fd5b50600160a060020a038135169060200135610599565b34801561028457600080fd5b506101aa6004803603602081101561029b57600080fd5b5035600160a060020a0316610688565b3480156102b757600080fd5b506100d36106a3565b3480156102cc57600080fd5b50610181600480360360408110156102e357600080fd5b50600160a060020a0381351690602001356106da565b34801561030557600080fd5b506101816004803603604081101561031c57600080fd5b50600160a060020a0381351690602001356107b9565b34801561033e57600080fd5b506101aa6004803603604081101561035557600080fd5b50600160a060020a0381358116916020013516610852565b60408051808201909152600a81527f43726f7764204369747900000000000000000000000000000000000000000000602082015281565b336000818152600260209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60015490565b600160a060020a03831660009081526020819052604081205482111561043557600080fd5b600160a060020a038416600090815260026020908152604080832033845290915290205482111561046557600080fd5b600160a060020a038316151561047a57600080fd5b600160a060020a0384166000908152602081905260409020546104a3908363ffffffff61087d16565b600160a060020a0380861660009081526020819052604080822093909355908516815220546104d8908363ffffffff61088f16565b600160a060020a0380851660009081526020818152604080832094909455918716815260028252828120338252909152205461051a908363ffffffff61087d16565b600160a060020a03808616600081815260026020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b6a52b7d2dcc80cd2e400000081565b601281565b336000908152600260209081526040808320600160a060020a03861684529091528120548083106105ed57336000908152600260209081526040808320600160a060020a0388168452909152812055610622565b6105fd818463ffffffff61087d16565b336000908152600260209081526040808320600160a060020a03891684529091529020555b336000818152600260209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600160a060020a031660009081526020819052604090205490565b60408051808201909152600481527f4352574400000000000000000000000000000000000000000000000000000000602082015281565b336000908152602081905260408120548211156106f657600080fd5b600160a060020a038316151561070b57600080fd5b3360009081526020819052604090205461072b908363ffffffff61087d16565b3360009081526020819052604080822092909255600160a060020a0385168152205461075d908363ffffffff61088f16565b600160a060020a038416600081815260208181526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b336000908152600260209081526040808320600160a060020a03861684529091528120546107ed908363ffffffff61088f16565b336000818152600260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b60008282111561088957fe5b50900390565b8181018281101561089c57fe5b9291505056fea165627a7a72305820976f0d471026a56991af70e2bce41d8fe44897191742aa89cab7c9cee01508430029",
  "deployedBytecode": "0x6080604052600436106100b95763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100be578063095ea7b31461014857806318160ddd1461019557806323b872dd146101bc5780632ff2e9dc146101ff578063313ce56714610214578063661884631461023f57806370a082311461027857806395d89b41146102ab578063a9059cbb146102c0578063d73dd623146102f9578063dd62ed3e14610332575b600080fd5b3480156100ca57600080fd5b506100d361036d565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561010d5781810151838201526020016100f5565b50505050905090810190601f16801561013a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015457600080fd5b506101816004803603604081101561016b57600080fd5b50600160a060020a0381351690602001356103a4565b604080519115158252519081900360200190f35b3480156101a157600080fd5b506101aa61040a565b60408051918252519081900360200190f35b3480156101c857600080fd5b50610181600480360360608110156101df57600080fd5b50600160a060020a03813581169160208101359091169060400135610410565b34801561020b57600080fd5b506101aa610585565b34801561022057600080fd5b50610229610594565b6040805160ff9092168252519081900360200190f35b34801561024b57600080fd5b506101816004803603604081101561026257600080fd5b50600160a060020a038135169060200135610599565b34801561028457600080fd5b506101aa6004803603602081101561029b57600080fd5b5035600160a060020a0316610688565b3480156102b757600080fd5b506100d36106a3565b3480156102cc57600080fd5b50610181600480360360408110156102e357600080fd5b50600160a060020a0381351690602001356106da565b34801561030557600080fd5b506101816004803603604081101561031c57600080fd5b50600160a060020a0381351690602001356107b9565b34801561033e57600080fd5b506101aa6004803603604081101561035557600080fd5b50600160a060020a0381358116916020013516610852565b60408051808201909152600a81527f43726f7764204369747900000000000000000000000000000000000000000000602082015281565b336000818152600260209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60015490565b600160a060020a03831660009081526020819052604081205482111561043557600080fd5b600160a060020a038416600090815260026020908152604080832033845290915290205482111561046557600080fd5b600160a060020a038316151561047a57600080fd5b600160a060020a0384166000908152602081905260409020546104a3908363ffffffff61087d16565b600160a060020a0380861660009081526020819052604080822093909355908516815220546104d8908363ffffffff61088f16565b600160a060020a0380851660009081526020818152604080832094909455918716815260028252828120338252909152205461051a908363ffffffff61087d16565b600160a060020a03808616600081815260026020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b6a52b7d2dcc80cd2e400000081565b601281565b336000908152600260209081526040808320600160a060020a03861684529091528120548083106105ed57336000908152600260209081526040808320600160a060020a0388168452909152812055610622565b6105fd818463ffffffff61087d16565b336000908152600260209081526040808320600160a060020a03891684529091529020555b336000818152600260209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600160a060020a031660009081526020819052604090205490565b60408051808201909152600481527f4352574400000000000000000000000000000000000000000000000000000000602082015281565b336000908152602081905260408120548211156106f657600080fd5b600160a060020a038316151561070b57600080fd5b3360009081526020819052604090205461072b908363ffffffff61087d16565b3360009081526020819052604080822092909255600160a060020a0385168152205461075d908363ffffffff61088f16565b600160a060020a038416600081815260208181526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b336000908152600260209081526040808320600160a060020a03861684529091528120546107ed908363ffffffff61088f16565b336000818152600260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b60008282111561088957fe5b50900390565b8181018281101561089c57fe5b9291505056fea165627a7a72305820976f0d471026a56991af70e2bce41d8fe44897191742aa89cab7c9cee01508430029",
  "sourceMap": "57:459:1:-;;;409:104;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;292:37:1;436:12;:29;;;480:10;471:8;:20;;;;;;;;;;:37;57:459;;;;;;",
  "deployedSourceMap": "57:459:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;123:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;123:42:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;123:42:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1884:188:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1884:188:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1884:188:11;;;;;;;;;;;;;;;;;;;;;;;;;;;486:83:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;486:83:0;;;;;;;;;;;;;;;;;;;;800:466:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;800:466:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;800:466:11;;;;;;;;;;;;;;;;;;251:78:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;251:78:1;;;;211:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;211:35:1;;;;;;;;;;;;;;;;;;;;;;;3736:428:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3736:428:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3736:428:11;;;;;;;;;1246:99:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1246:99:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1246:99:0;-1:-1:-1;;;;;1246:99:0;;;169:38:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;169:38:1;;;;723:321:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;723:321:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;723:321:0;;;;;;;;;2989:290:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2989:290:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2989:290:11;;;;;;;;;2391:146;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2391:146:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2391:146:11;;;;;;;;;;;123:42:1;;;;;;;;;;;;;;;;;;;:::o;1884:188:11:-;1971:10;1951:4;1963:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;1963:29:11;;;;;;;;;;;:38;;;2012;;;;;;;1951:4;;1963:29;;1971:10;;2012:38;;;;;;;;-1:-1:-1;2063:4:11;1884:188;;;;:::o;486:83:0:-;552:12;;486:83;:::o;800:466:11:-;-1:-1:-1;;;;;934:15:11;;902:4;934:15;;;;;;;;;;;924:25;;;916:34;;;;;;-1:-1:-1;;;;;974:14:11;;;;;;:7;:14;;;;;;;;989:10;974:26;;;;;;;;964:36;;;956:45;;;;;;-1:-1:-1;;;;;1015:17:11;;;;1007:26;;;;;;-1:-1:-1;;;;;1058:15:11;;:8;:15;;;;;;;;;;;:27;;1078:6;1058:27;:19;:27;:::i;:::-;-1:-1:-1;;;;;1040:15:11;;;:8;:15;;;;;;;;;;;:45;;;;1107:13;;;;;;;:25;;1125:6;1107:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;1091:13:11;;;:8;:13;;;;;;;;;;;:41;;;;1167:14;;;;;:7;:14;;;;;1182:10;1167:26;;;;;;;:38;;1198:6;1167:38;:30;:38;:::i;:::-;-1:-1:-1;;;;;1138:14:11;;;;;;;:7;:14;;;;;;;;1153:10;1138:26;;;;;;;;:67;;;;1216:28;;;;;;;;;;;1138:14;;1216:28;;;;;;;;;;;-1:-1:-1;1257:4:11;800:466;;;;;:::o;251:78:1:-;292:37;251:78;:::o;211:35::-;244:2;211:35;:::o;3736:428:11:-;3879:10;3838:4;3871:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3871:29:11;;;;;;;;;;3910:28;;;3906:165;;3956:10;3980:1;3948:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3948:29:11;;;;;;;;;:33;3906:165;;;4034:30;:8;4047:16;4034:30;:12;:30;:::i;:::-;4010:10;4002:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;4002:29:11;;;;;;;;;:62;3906:165;4090:10;4112:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;4081:61:11;;4112:29;;;;;;;;;;;4081:61;;;;;;;;;4090:10;4081:61;;;;;;;;;;;-1:-1:-1;4155:4:11;;3736:428;-1:-1:-1;;;3736:428:11:o;1246:99:0:-;-1:-1:-1;;;;;1324:16:0;1302:7;1324:16;;;;;;;;;;;;1246:99::o;169:38:1:-;;;;;;;;;;;;;;;;;;;:::o;723:321:0:-;825:10;786:4;816:20;;;;;;;;;;;806:30;;;798:39;;;;;;-1:-1:-1;;;;;851:17:0;;;;843:26;;;;;;908:10;899:8;:20;;;;;;;;;;;:32;;924:6;899:32;:24;:32;:::i;:::-;885:10;876:8;:20;;;;;;;;;;;:55;;;;-1:-1:-1;;;;;953:13:0;;;;;;:25;;971:6;953:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;937:13:0;;:8;:13;;;;;;;;;;;;:41;;;;989:33;;;;;;;937:13;;998:10;;989:33;;;;;;;;;;-1:-1:-1;1035:4:0;723:321;;;;:::o;2989:290:11:-;3146:10;3086:4;3138:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3138:29:11;;;;;;;;;;:46;;3172:11;3138:46;:33;:46;:::i;:::-;3108:10;3100:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3100:29:11;;;;;;;;;;;;:85;;;3196:61;;;;;;3100:29;;3196:61;;;;;;;;;;;-1:-1:-1;3270:4:11;2989:290;;;;:::o;2391:146::-;-1:-1:-1;;;;;2507:15:11;;;2483:7;2507:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;2391:146::o;1157:116:10:-;1217:7;1239:8;;;;1232:16;;;;-1:-1:-1;1261:7:10;;;1157:116::o;1335:128::-;1416:7;;;1436;;;;1429:15;;;;1335:128;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\n\nimport './StandardToken.sol';\n\ncontract CRWDToken is StandardToken {\n\n  /*\n   * Storage\n   */\n\n  string public constant name = \"Crowd City\";\n  string public constant symbol = \"CRWD\";\n  uint8 public constant decimals = 18;\n\n  uint256 public constant INITIAL_SUPPLY = 100000000 * (10 ** uint256(decimals));\n\n  /*\n   * Public functions\n   */\n\n  /**\n  * @dev Contract constructor\n  */\n  constructor() public {\n    totalSupply_ = INITIAL_SUPPLY;\n    balances[msg.sender] = INITIAL_SUPPLY;\n  }\n\n}",
  "sourcePath": "/Users/didil/work/projects/ethereum/crwd-prototype/contracts/CRWDToken.sol",
  "ast": {
    "absolutePath": "/Users/didil/work/projects/ethereum/crwd-prototype/contracts/CRWDToken.sol",
    "exportedSymbols": {
      "CRWDToken": [
        135
      ]
    },
    "id": 136,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 97,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/Users/didil/work/projects/ethereum/crwd-prototype/contracts/StandardToken.sol",
        "file": "./StandardToken.sol",
        "id": 98,
        "nodeType": "ImportDirective",
        "scope": 136,
        "sourceUnit": 3073,
        "src": "26:29:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 99,
              "name": "StandardToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3072,
              "src": "79:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StandardToken_$3072",
                "typeString": "contract StandardToken"
              }
            },
            "id": 100,
            "nodeType": "InheritanceSpecifier",
            "src": "79:13:1"
          }
        ],
        "contractDependencies": [
          95,
          2178,
          2210,
          3072
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 135,
        "linearizedBaseContracts": [
          135,
          3072,
          95,
          2178,
          2210
        ],
        "name": "CRWDToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 103,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 135,
            "src": "123:42:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 101,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "123:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "43726f77642043697479",
              "id": 102,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "153:12:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_53e35a6743250294254191ad26eb130b5704c1b38893405b0d11fecf8cf3d432",
                "typeString": "literal_string \"Crowd City\""
              },
              "value": "Crowd City"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 106,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 135,
            "src": "169:38:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 104,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "169:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "43525744",
              "id": 105,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "201:6:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_4562f5f3c47c7877e6a00d5616769b498db2c2a4957c4c83a02f9972bc1632ac",
                "typeString": "literal_string \"CRWD\""
              },
              "value": "CRWD"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 109,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 135,
            "src": "211:35:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 107,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "211:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 108,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "244:2:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 119,
            "name": "INITIAL_SUPPLY",
            "nodeType": "VariableDeclaration",
            "scope": 135,
            "src": "251:78:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 110,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "251:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 118,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "313030303030303030",
                "id": 111,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "292:9:1",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_100000000_by_1",
                  "typeString": "int_const 100000000"
                },
                "value": "100000000"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "components": [
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "305:2:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 114,
                          "name": "decimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 109,
                          "src": "319:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "311:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "311:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "305:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 117,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "304:25:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "292:37:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 133,
              "nodeType": "Block",
              "src": "430:83:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 122,
                      "name": "totalSupply_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "436:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 123,
                      "name": "INITIAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "451:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "436:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 125,
                  "nodeType": "ExpressionStatement",
                  "src": "436:29:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 126,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "471:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 129,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 127,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3686,
                          "src": "480:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "480:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "471:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 130,
                      "name": "INITIAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "494:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "471:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 132,
                  "nodeType": "ExpressionStatement",
                  "src": "471:37:1"
                }
              ]
            },
            "documentation": "@dev Contract constructor",
            "id": 134,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "420:2:1"
            },
            "returnParameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "430:0:1"
            },
            "scope": 135,
            "src": "409:104:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 136,
        "src": "57:459:1"
      }
    ],
    "src": "0:516:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/didil/work/projects/ethereum/crwd-prototype/contracts/CRWDToken.sol",
    "exportedSymbols": {
      "CRWDToken": [
        135
      ]
    },
    "id": 136,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 97,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/Users/didil/work/projects/ethereum/crwd-prototype/contracts/StandardToken.sol",
        "file": "./StandardToken.sol",
        "id": 98,
        "nodeType": "ImportDirective",
        "scope": 136,
        "sourceUnit": 3073,
        "src": "26:29:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 99,
              "name": "StandardToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3072,
              "src": "79:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StandardToken_$3072",
                "typeString": "contract StandardToken"
              }
            },
            "id": 100,
            "nodeType": "InheritanceSpecifier",
            "src": "79:13:1"
          }
        ],
        "contractDependencies": [
          95,
          2178,
          2210,
          3072
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 135,
        "linearizedBaseContracts": [
          135,
          3072,
          95,
          2178,
          2210
        ],
        "name": "CRWDToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 103,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 135,
            "src": "123:42:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 101,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "123:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "43726f77642043697479",
              "id": 102,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "153:12:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_53e35a6743250294254191ad26eb130b5704c1b38893405b0d11fecf8cf3d432",
                "typeString": "literal_string \"Crowd City\""
              },
              "value": "Crowd City"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 106,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 135,
            "src": "169:38:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 104,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "169:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "43525744",
              "id": 105,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "201:6:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_4562f5f3c47c7877e6a00d5616769b498db2c2a4957c4c83a02f9972bc1632ac",
                "typeString": "literal_string \"CRWD\""
              },
              "value": "CRWD"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 109,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 135,
            "src": "211:35:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 107,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "211:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 108,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "244:2:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 119,
            "name": "INITIAL_SUPPLY",
            "nodeType": "VariableDeclaration",
            "scope": 135,
            "src": "251:78:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 110,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "251:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 118,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "313030303030303030",
                "id": 111,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "292:9:1",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_100000000_by_1",
                  "typeString": "int_const 100000000"
                },
                "value": "100000000"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "components": [
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "305:2:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 114,
                          "name": "decimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 109,
                          "src": "319:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "311:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "311:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "305:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 117,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "304:25:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "292:37:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 133,
              "nodeType": "Block",
              "src": "430:83:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 122,
                      "name": "totalSupply_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "436:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 123,
                      "name": "INITIAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "451:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "436:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 125,
                  "nodeType": "ExpressionStatement",
                  "src": "436:29:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 126,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "471:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 129,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 127,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3686,
                          "src": "480:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "480:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "471:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 130,
                      "name": "INITIAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "494:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "471:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 132,
                  "nodeType": "ExpressionStatement",
                  "src": "471:37:1"
                }
              ]
            },
            "documentation": "@dev Contract constructor",
            "id": 134,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "420:2:1"
            },
            "returnParameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "430:0:1"
            },
            "scope": 135,
            "src": "409:104:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 136,
        "src": "57:459:1"
      }
    ],
    "src": "0:516:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "1547690477964": {
      "events": {},
      "links": {},
      "address": "0x67Bde3887B995c3e1b7048E6b5BC4E1437a0b922",
      "transactionHash": "0x9a4d6ca9947e2d8477c0532c6241a06a9798bdf0cb34ef1caac3621458021120"
    }
  },
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-01-17T04:21:05.396Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "_owner": "address The address which owns the funds.",
          "_spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "_spender": "The address which will spend the funds.",
          "_value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "_owner": "The address to query the the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "constructor": {
        "details": "Contract constructor"
      },
      "decreaseApproval(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
        "params": {
          "_spender": "The address which will spend the funds.",
          "_subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseApproval(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
        "params": {
          "_addedValue": "The amount of tokens to increase the allowance by.",
          "_spender": "The address which will spend the funds."
        }
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token for a specified address",
        "params": {
          "_to": "The address to transfer to.",
          "_value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another",
        "params": {
          "_from": "address The address which you want to send tokens from",
          "_to": "address The address which you want to transfer to",
          "_value": "uint256 the amount of tokens to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}